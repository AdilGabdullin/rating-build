{"version":3,"sources":["List.js","New.js","App.js","index.js"],"names":["List","questions","fake","clear","notEmpty","length","last","Math","ceil","page","useParams","history","useHistory","begin","pageQuestions","slice","className","to","onClick","scope","map","key","question","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","push","itemClass","linkClass","New","add","useState","area","setArea","input","setInput","answers","setAnswers","name","id","cols","rows","value","event","target","style","listStyle","option","type","window","alert","App","initialState","JSON","parse","localStorage","getItem","state","setState","update","next","setItem","stringify","path","newQuestion","Array","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5d7e1d7.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport Pagination from \"react-js-pagination\";\n\nexport default function List({ questions, fake, clear }) {\n  const perPage = 10,\n    notEmpty = questions.length > 0,\n    last = Math.ceil(questions.length / perPage),\n    page = +(useParams().page ?? last),\n    history = useHistory(),\n    begin = (page - 1) * perPage,\n    pageQuestions = questions.slice(begin, begin + perPage),\n    pageChange = (page) => {\n      history.push(`/${page}`);\n    };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <h1>{notEmpty ? \"Список вопросов\" : \"Анкета пуста\"}</h1>\n        </div>\n        <div className=\"col\">\n          <Link to=\"/new\">\n            <button className=\"btn btn-primary mt-2\">Добавить</button>\n          </Link>\n        </div>\n        <div className=\"col\">\n          <button className=\"btn btn-primary mt-2\" onClick={fake}>\n            Добавить 50\n          </button>\n        </div>\n        <div className=\"col\">\n          <button className=\"btn btn-primary mt-2\" onClick={clear}>\n            Очистить\n          </button>\n        </div>\n      </div>\n      {notEmpty && (\n        <>\n          <div className=\"row\">\n            <div className=\"col\">\n              <table className=\"table\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">№</th>\n                    <th scope=\"col\">Вопрос</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {pageQuestions.map(({ question }, key) => (\n                    <tr key={key}>\n                      <td>{begin + key + 1}</td>\n                      <td>{question}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div className=\"row justify-content-end\">\n            <div className=\"col-md-auto\">\n              <Pagination\n                activePage={page}\n                itemsCountPerPage={perPage}\n                totalItemsCount={questions.length}\n                pageRangeDisplayed={3}\n                onChange={pageChange}\n                itemClass=\"page-item\"\n                linkClass=\"page-link\"\n              />\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function New({ add }) {\n  const [area, setArea] = useState(\"\"),\n    [input, setInput] = useState(\"\"),\n    [answers, setAnswers] = useState([]),\n    areaChange = (event) => setArea(event.target.value),\n    inputChange = (event) => setInput(event.target.value),\n    history = useHistory(),\n    addAnswer = () => {\n      if (input === \"\") {\n        window.alert('Поле \"Ответ\" не должно быть пустым.');\n        return;\n      }\n      setAnswers([...answers, input]);\n      setInput(\"\");\n    },\n    save = () => {\n      if (area.length < 20) {\n        window.alert(\n          'поле \"Новый вопрос\", обязательное к заполнению, минимум 20 символов.'\n        );\n        return;\n      }\n      if (answers.length < 2) {\n        window.alert(\"минимум 2 варианта ответа.\");\n        return;\n      }\n      add({ question: area, answers });\n      history.push(\"/\");\n    };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <h1>Новый вопрос</h1>\n        </div>\n      </div>\n      <div className=\"row\">\n        <textarea\n          name=\"text\"\n          id=\"\"\n          cols=\"30\"\n          rows=\"5\"\n          value={area}\n          onChange={areaChange}\n        />\n      </div>\n      <div className=\"row\">\n        <hr className=\"mt-4\" />\n      </div>\n      <div className=\"row\">\n        <ul style={{ listStyle: \"none\" }}>\n          {answers.map((option, key) => (\n            <li key={key}>{option}</li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={input}\n            onChange={inputChange}\n          />\n        </div>\n        <div className=\"col\">\n          <button className=\"btn btn-primary\" onClick={addAnswer}>\n            Добавить\n          </button>\n        </div>\n      </div>\n      <div className=\"row justify-content-center mt-5\">\n        <div className=\"col-2\">\n          <button className=\"btn btn-primary\" onClick={save}>\n            Сохранить\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport List from \"./List\";\nimport New from \"./New\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nexport default function App() {\n  const initialState = JSON.parse(localStorage.getItem(\"questionnaire\")),\n    [state, setState] = useState(initialState ?? []),\n    update = (next) => {\n      setState(next);\n      localStorage.setItem(\"questionnaire\", JSON.stringify(next));\n    },\n    add = (newQuestion) => update([...state, newQuestion]),\n    clear = () => update([]),\n    fake = () =>\n      update([\n        ...state,\n        ...[...Array(50).keys()].map((key) => ({\n          question: `вопрос ${state.length + key + 1}`,\n          answers: [\"да\", \"нет\"],\n        })),\n      ]);\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/new\">\n            <New add={add} />\n          </Route>\n          <Route path=\"/:page(\\d+)?\">\n            <List questions={state} fake={fake} clear={clear} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}